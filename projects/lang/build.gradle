plugins {
    id 'java-library'
    id 'me.champeau.jmh' version '0.7.2'
    id 'io.morethan.jmhreport' version '0.9.0'
}

description "Essential value types"

sourceSets {
    lab {
        compileClasspath += sourceSets.main.runtimeClasspath
        runtimeClasspath += sourceSets.main.runtimeClasspath
    }
}

dependencies {
    jmh 'org.openjdk.jmh:jmh-core:1.37'
    jmh 'org.scala-lang:scala-library:2.13.8'
    jmh 'org.typelevel:spire_3:0.18.0'
    jmh 'org.apfloat:apfloat:1.14.0'
    jmh 'org.jscience:jscience:4.3.1'
    jmh 'org.libj:math:0.6.8'
    jmh 'org.huldra.math:bigint:0.7.1'
    jmhRuntimeOnly 'org.openjdk.jmh:jmh-generator-annprocess:1.37'
    
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.7.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.1'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.7.1'
    testImplementation 'org.assertj:assertj-core:3.24.2'
    
    labImplementation 'org.openjdk.jol:jol-core:0.17'
}

jmhJar {
    duplicatesStrategy = DuplicatesStrategy.WARN
}

jmh {
    duplicateClassesStrategy = DuplicatesStrategy.EXCLUDE
    resultFormat = 'JSON'
}

def jmhReportHtmlDir = 'build/results/jmh/html'
project.tasks.getByName("jmhReport").doFirst {
    project.file(jmhReportHtmlDir).mkdirs()
}
jmhReport {
    jmhResultPath = project.file('build/results/jmh/results.json')
    jmhReportOutput = project.file(jmhReportHtmlDir)
}
